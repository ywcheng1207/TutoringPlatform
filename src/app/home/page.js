'use client'

//
import { useRouter } from 'next/navigation'
import { useEffect, useState } from 'react'
import Image from 'next/image'
import { Select, Input, Button, notification } from 'antd'

//
import TeacherCard from '@/components/TeacherCard'
import iconBell from '@/assets/icon-bell.svg'
import NoPhoto from '@/components/NoPhoto'
import HomeList from '@/components/HomeList'
import { getStudentRankData, getTeacherListData } from '@/apis/apis'

//
const BASEURL = 'https://tutor-online.zeabur.app'

//
// export const metadata = {
//   title: 'home',
//   description: 'Generated by YWJ'
// }

const data = [
  { id: 1 },
  { id: 2 },
  { id: 3 },
  { id: 4 },
  { id: 5 },
  { id: 6 },
  { id: 7 },
  { id: 8 },
  { id: 9 }
]
// const rankinData = [
//   { id: 1 },
//   { id: 2 },
//   { id: 3 },
//   { id: 4 },
//   { id: 5 },
//   { id: 6 }
// ]
//
const Home = () => {
  const router = useRouter()
  const [studentRankData, setStudentRankData] = useState([])
  const [teacherListData, setTeacherListData] = useState([])
  const [classFilter, setClassFilter] = useState('全部')
  const [countryFilter, setCountryFilter] = useState('全部')
  const classType = ['全部', '生活英文', '商業英文', '旅遊英文', '兒童英文']
  const teacherCountry = ['全部', '美國', '非洲', '台灣', '印度']
  const [currentPage, setCurrentPage] = useState(1)
  const [dataCount, setDataCount] = useState(1)
  const pageSize = 6

  const handleNavigate = ({ id }) => {
    console.log(id)
  }
  const handlePage = page => {
    setCurrentPage(page)
  }

  useEffect(() => {
    if (!typeof window !== 'undefined' && !window?.localStorage?.getItem('TOKEN')) {
      notification.error({
        message: '請先登入!',
        duration: 1
      })
      return router.push('/signin')
    }

    const fetchStudentRankDataData = async () => {
      try {
        const res = await getStudentRankData()
        // console.log('學生排行資料', res.data.data)
        setStudentRankData(res.data.data)
      } catch (error) {
        console.error('學生排行資料錯誤', error)
      }
    }
    const fetchTeacherListDataData = async () => {
      try {
        const res = await getTeacherListData({
          page: currentPage
        })
        console.log('老師清單資料', res)
        setTeacherListData(res.data.data.teacherLimit)
        setDataCount(res.data.data.count)
      } catch (error) {
        console.error('老師清單資料錯誤', error)
      }
    }
    fetchTeacherListDataData()
    fetchStudentRankDataData()
  }, [currentPage])

  return (
    <div className='bg-yellow'>
      <div className='flex flex-col gap-5 md:hidden'>
        <Select placeholder='課程' style={{ width: '100%' }} showSearch={true} />
        <Select placeholder='教師國籍' style={{ width: '100%' }} showSearch={true} />
        <Input
          placeholder='搜尋老師的名字' style={{ width: '100%' }}
          suffix={<Button style={{ color: '#fff', background: '#66BFFF' }}>搜尋</Button>}
        />
        <StudyRanking studentRankData={studentRankData} />
        <MobileCardList />
      </div>
      <div className='hidden md:flex gap-5'>
        <div className='flex flex-col gap-5'>
          <div className='flex gap-3'>
            <div>課程：</div>
            {classType.map((item) => (
              <div
                key={item}
                style={{
                  color: classFilter === item && '#66BFFF',
                  cursor: 'pointer'
                }}
                onClick={() => {
                  setClassFilter(item)
                  console.log(item)
                }}
              >
                {item}
              </div>
            ))}
          </div>
          <div className='flex gap-3'>
            <div>教師國籍：</div>
            {teacherCountry.map((item) => (
              <div
                key={item}
                style={{
                  color: countryFilter === item && '#66BFFF',
                  cursor: 'pointer'
                }}
                onClick={() => {
                  setCountryFilter(item)
                  console.log(item)
                }}
              >
                {item}
              </div>
            ))}
          </div>
          <HomeList
            data={data}
            teacherListData={teacherListData}
            currentPage={currentPage}
            onPage={handlePage}
            pageSize={pageSize}
            dataCount={dataCount}
          />
        </div>
        <StudyRanking studentRankData={studentRankData} />
      </div>
    </div>
  )
}
export default Home

const StudyRanking = ({ studentRankData }) => {
  return (
    <div className='min-h-[100px] border-[1px] border-solid border-[#CCC] rounded-[3px] p-3'>
      <div className='bg-[#DDD] text-[#fff] py-1 rounded-sm flex justify-center gap-2 items-center mb-3'>
        <Image src={iconBell} alt='bell' />
        <div>學習時數排行</div>
      </div>
      <div className='flex flex-wrap gap-3 md:justify-center md:block md:w-[240px]'>
        {studentRankData?.map(item => (
          <div key={item.id} className='flex items-center py-2 md:w-full'>
            <div className='flex items-center gap-3'>
              <NoPhoto size='avatar' photo={item.avatar} username={item.name} />
              <h2 className='hidden md:block flex-1 max-w-[130px] overflow-hidden text-nowrap text-ellipsis'>
                {item.name}
              </h2>
            </div>
          </div>
        ))}
      </div>
    </div>
  )
}

const MobileCardList = () => {
  return (
    <div className='flex flex-col gap-3'>
      {data.map(teacher => <TeacherCard id={teacher.id} key={teacher.id} />)}
    </div>
  )
}
